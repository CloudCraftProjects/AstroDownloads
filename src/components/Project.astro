---
import type { CollectionEntry } from "astro:content";
import FmtDate from "./FmtDate.astro";
import DownloadButton from "./DownloadButton.astro";
import FmtDurationPreact from "./FmtDurationPreact.tsx";

interface Props {
  entry: CollectionEntry<"projects">;
}

const { entry } = Astro.props;

const durationMs = (entry.data.end?.valueOf() || Date.now()) - entry.data.start!.valueOf();
const downloadLink = entry.data.download?.link ? `/download/${entry.id}` : undefined;
---

<div class="box">
  <h3>{entry.data.title}</h3>
  {
    entry.data.description && (
      <>
        <span>{entry.data.description}</span>
        <hr />
      </>
    )
  }
  <ul>
    {
      entry.data.start && (
        <li>
          {durationMs ? "Startpunkt" : "Datum"}: <FmtDate date={entry.data.start} />
        </li>
      )
    }
    {
      entry.data.end && !!durationMs && (
        <li>
          Endpunkt: <FmtDate date={entry.data.end} />
        </li>
      )
    }
    {
      entry.data.start && !!durationMs && (
        <li>
          Laufzeit: <FmtDurationPreact client:load start={entry.data.start} end={entry.data.end} />
        </li>
      )
    }
  </ul>
  {entry.data.download && <DownloadButton {...entry.data.download} link={downloadLink} />}
</div>
<style>
  .box {
    padding: 1em;
    max-width: calc(var(--content-width) * 0.8);
    width: 100%;
    border: 2px white solid;
    border-radius: 0.3em;
    margin: 2em;
    margin-left: auto;
    margin-right: auto;
  }
  h3 {
    font-weight: bold;
    margin-bottom: 1em;
  }
  ul {
    padding-left: 1em;
    margin-bottom: 0em;
    margin-top: 0em;
  }
</style>
